version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/db_data/
    command: postgres -c password_encryption=md5
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./Database/conf/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - db:/var/lib/postgresql/data
    networks:
      - dbNetwork

  backend:
    build: ./Backend
    command: bash -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn uwpath_backend.wsgi -w 3 --bind 0.0.0.0:8000
      "
    ports:
      - "8000:8000"
    networks:
      - dbNetwork
      - backendNetwork
    depends_on:
      - db
    environment:
      - SECRET_KEY=7ldnlu_gz*&vx&=4)q3#74ih@nzx*owgeu^=*katjqpbb-s1sk
      - DJANGO_SETTINGS_MODULE=uwpath_backend.prod

  web:
    build: ./Frontend
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backendNetwork

  dataparsing:
    build: ./DataParsing
    command: /bin/bash DataParsing/PopulateDatabase.sh
    volumes:
      - .:/code
    depends_on:
      - db
    networks:
      - dbNetwork
    environment:
      - UWPATH_ENVIRONMENT=prod


networks:
  dbNetwork:
    driver: bridge
  backendNetwork:
    driver: bridge

volumes:
  db:
